                                                                    */

ComputeProjectiveSymmetryGroup:=function(L,G);
/* L is a sequence of vectors of equal nor */
/* G is the projective symmetry group of L */
R:=[];
d:=Nrows(L);
Attach("FrameSymmetry.m");
V:= CanonicalGramian(L)
For a in G do
     P=ZeroMatrix(ComplexField(),d,d);
     P[1]:=L(1^a);
     c:=1;
     For j in [2..d] do
          c:=c*V[(j-1)^a,j^a]/W[j^a,(j-1)^a];
     P[j]:=c*L[j^a];
     end for;
     Q:=Transpose(P)*(Submatrix(L,1,1,d,d))^{-1};
     Append(~R,Q);
end for;

end function;

-------------------------------------------------------

/* v is a list of column numbers, e.g., v=[1,3,5] */
ColumnSubmatrix:=function(A,v);
  B:=ZeroMatrix(BaseRing(A),Nrows(A),#v);
  for j in [1..Nrows(A)] do 
    for k in [1..#v] do
      B[j,k]:=A[j,v[k]];

    end for;
  end for;
  return B;
end function;

Attach("FrameSymmetry.m");
g:=11;
load "findlinepairs.magma";
V:=Transpose(Matrix(#X[1],2,X[1]));
Grm:=CanonicalGramian(V);
PSG:=FrameSymmetry(Grm);

Lmatrix:=function(V,Grm,g);
  colbasis:=[j:j in [1..d]];
//  colbasis:=[1,6];
  alpha:=[BaseRing(V)!1];
  for j in [2..d] do
    Append(~alpha,alpha[colbasis[j-1]]*Grm[colbasis[j]^g,colbasis[j-1]^g]/Grm[colbasis[j],colbasis[j-1]]); 
  end for;
  ScalarMat:=DiagonalMatrix(BaseRing(V),alpha);
  return ColumnSubmatrix(V,colbasis^g)*ScalarMat*ColumnSubmatrix(V,colbasis)^(-1);
end function;

 H:=MatrixGroup<d,BaseRing(V)|[Lmatrix(V,Grm,g):g in Generators(PSG)]>;


------------------------------------------------------------------------
Aold:=[];  
Anew:=[1];  
A:=[1]; 
rk:=0; 
B:=[2..Nrows(Grm)]; 
alpha:=[BaseRing(V)!1];
k:=0;
while rk lt d do

      C:=B;

      Aold:=Anew;

      Anew:=[];
      
      i:=1; j:=1;

      while i lt #Aold+1 and rk lt d do

               while j lt #C+1 and rk lt d do

                       if Grm[Aold[i],C[j]] ne 0 then Append(~Anew,C[j]);

                                             Append(~alpha,alpha[k+i]*Grm[C[j]^g,Aold[i]^g]/Grm[C[j],Aold[i]]);  
 
                                                      Exclude(~B,C[j]);

                       end if;

                       if #A+#Anew gt d-1 then rk:=Rank(ColumnSubmatrix(V,A cat Anew));

                       end if;

                       j:=j+1;

                end while;

                i:=i+1;

      end while;
  
      k:=#A;   
      A:=A cat Anew;

end while;